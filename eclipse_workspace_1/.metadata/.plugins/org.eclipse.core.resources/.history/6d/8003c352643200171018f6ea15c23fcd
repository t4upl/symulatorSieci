import java.util.ArrayList;

public class LokalneCentrum extends CoreClass {


	static int timeIndex=0;
	
	//mowi czy w dnaym scenariuszu jest mozliwosc handlu flase tylko w senarisuzu =1
	Boolean handel=true;

	
	
	//zawiera dzien i godzine
	ArrayList<String> dayHourList = new ArrayList<String>(); 
	
	//zaiwera godizny
	ArrayList<String> hourList = new ArrayList<String>();
	
	//zawiera dni
	ArrayList<String> dayList = new ArrayList<String>();
	
	
	
	//Singletony	
	private Reporter reporter;
	private ListaProsumentowWrap listaProsumentowWrap;
	private Agregator agregator;
	private Rynek rynek;
	private Loader loader;
	
	//-----------------------
	
	//Singleton shit
	private static LokalneCentrum instance = null;
	private LokalneCentrum() 
	{
		
	}
	
	public static LokalneCentrum getInstance() {
	      if(instance == null) {
	         instance = new LokalneCentrum();
	      }
	      return instance;
	}
	
	//----------------------
	public static int getTimeIndex()
	{
		return timeIndex;
	} 
	
	//-----------------------
	
	String dayFromDayHour(String dayHour)
	{
		String[] s2 = dayHour.split(" ") ;
		return s2[0];
	}
	
	String hourFromDayHour(String dayHour)
	{
		String[] s2 = dayHour.split(" ") ;
		return s2[1];
	}
	
	public void start()
	{
		//ustaw singletony		
		setUp();
		
		//stworz lsite godzin
		createHoursList();

		stworzProsumentow();
				
		
		startSimulation();
		
		
		endSimulation();
				
		System.out.println("\n-----\nLokalne CentrumDystryucji - end");
		
	}
	
	void endSimulation()
	{
		print("endSimulation");
	}

	
	void startSimulation()
	{
		print("startSimulation");
	}
	
	void stworzProsumentow()
	{
		print ("stworzProsumentow");
	}
	
	void createHoursList()
	{
		print("createHoursList");
		dayHourList =loader.loadDayHourList();
		
		int i=0;
		while (i<dayHourList.size())
		{
			print(i+" "+ dayHourList.get(i));
			String dayHour =dayHourList.get(i);
			
			dayList.add(dayFromDayHour(dayHour));
			hourList.add();
			
			i++;
		}
	}

	
	//ustaw wszystkie singletony
	void setUp()
	{
		print("setUP");
		
		reporter = Reporter.getInstance();
		listaProsumentowWrap = ListaProsumentowWrap.getInstance();
		rynek = Rynek.getInstance();		
		loader =Loader.getInstance();
	}
	
	
	
	
}
